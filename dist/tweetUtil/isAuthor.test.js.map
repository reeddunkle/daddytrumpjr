{"version":3,"sources":["../../src/tweetUtil/isAuthor.test.js"],"names":["dtJrId","test","expect","toBe"],"mappings":";;AAAA;;AACA;;AAEA,IAAMA,SAAS,QAAf;;AAEAC,KAAK,oBAAL,EAA2B,YAAM;AAC/BC,SAAO,qBAASF,MAAT,uBAAP,EAAwCG,IAAxC,CAA6C,IAA7C;AACD,CAFD;;AAIAF,KAAK,2BAAL,EAAkC,YAAM;AACtCC,SAAO,qBAASF,MAAT,uBAAP,EAAwCG,IAAxC,CAA6C,KAA7C;AACD,CAFD;;AAIAF,KAAK,2BAAL,EAAkC,YAAM;AACtCC,SAAO,qBAASF,MAAT,uBAAP,EAAwCG,IAAxC,CAA6C,KAA7C;AACD,CAFD","file":"isAuthor.test.js","sourcesContent":["import { isAuthor } from './index';\nimport { authoredTweet, noiseTweetOne, noiseTweetTwo } from '../mocks';\n\nconst dtJrId = 39344374;\n\ntest('True when authored', () => {\n  expect(isAuthor(dtJrId, authoredTweet)).toBe(true);\n});\n\ntest('False when not author (1)', () => {\n  expect(isAuthor(dtJrId, noiseTweetOne)).toBe(false);\n});\n\ntest('False when not author (2)', () => {\n  expect(isAuthor(dtJrId, noiseTweetTwo)).toBe(false);\n});\n"]}